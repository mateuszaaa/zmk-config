/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "../zmk-nodefree-config/helper.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "include/behaviours_homerow_mods.dtsi"


#define DEF 0
#define SYMB 1
#define NUM 2
#define SYS 3
#define BLANK 4

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&sl {
    release-after-ms = <500>;
};


// / {
//     macros {
//         exit_symbol: exit_symbol {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings = <&macro_tap &kp RETURN &to DEF>;
//         };
//         i3_1: i3_1 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N1 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_2: i3_2 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N2 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_3: i3_3 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N3 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_4: i3_4 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N4 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_5: i3_5 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N5 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_6: i3_6 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N6 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_7: i3_7 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N7 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_8: i3_8 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N8 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//         i3_9: i3_9 {
//             label = "ZM_zed_em_kay";
//             compatible = "zmk,behavior-macro";
//             #binding-cells = <0>;
//             bindings
//                 = <&macro_press &kp LGUI>
//                 , <&macro_tap &kp N9 >
//                 , <&macro_release &kp LGUI>
//                 ;
//         };
//     };
// };
//
// / {
//     combos {
//         compatible = "zmk,combos";
//         combo_caps_right {
//             timeout-ms = <50>;
//             key-positions = <20 21 22>;
//             bindings = <&caps_word>;
//         };
//         combo_caps_left {
//             timeout-ms = <50>;
//             key-positions = <14 15 16>;
//             bindings = <&caps_word>;
//         };
//         combo_i3_1 {
//             timeout-ms = <50>;
//             key-positions = <2 14>;
//             bindings = <&i3_1>;
//         };
//         combo_i3_2 {
//             timeout-ms = <50>;
//             key-positions = <3 15>;
//             bindings = <&i3_2>;
//         };
//         combo_i3_3 {
//             timeout-ms = <50>;
//             key-positions = <4 16>;
//             bindings = <&i3_3>;
//         };
//         combo_i3_4 {
//             timeout-ms = <50>;
//             key-positions = <14 26>;
//             bindings = <&i3_4>;
//         };
//         combo_i3_5 {
//             timeout-ms = <50>;
//             key-positions = <15 27>;
//             bindings = <&i3_5>;
//         };
//         combo_i3_6 {
//             timeout-ms = <50>;
//             key-positions = <16 28>;
//             bindings = <&i3_6>;
//         };
//         combo_i3_7 {
//             timeout-ms = <50>;
//             key-positions = <13 14>;
//             bindings = <&i3_7>;
//         };
//         combo_i3_8 {
//             timeout-ms = <50>;
//             key-positions = <14 15>;
//             bindings = <&i3_8>;
//         };
//         combo_i3_9 {
//             timeout-ms = <50>;
//             key-positions = <15 16>;
//             bindings = <&i3_9>;
//         };
//     };
// };

/ {

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp F13 &kp Q    &kp W    &kp E     &kp R     &kp T                                                    &kp Y      &kp U      &kp I     &kp O   &kp P    &kp F14
&mt LSHIFT F14 &hm_shift_l LSHFT A    &kp S    &hm_l LGUI D    &hm_l LCTRL F     &kp G                        &kp H      &hm_r RCTRL J     &hm_r RGUI K    &kp L   &hm_shift_r RSHFT SEMI &mt RSHIFT F15
&kp F14 &lt NUM Z    &kp X    &kp C     &kp V     &kp B     &kp PSCRN &kp DEL        &kp INSERT &caps_word &kp N      &kp M      &kp COMMA &kp DOT &kp FSLH &kp F16
                        &kp LALT  &to  DEF  &kp SPACE &kp X     &kp BSPC       &kp TAB    &to  SYS   &sl SYMB  &to NUM   &kp LALT
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

		};

		symbols {
			bindings = <
&none &kp EXCL  &kp AT    &kp HASH &kp DOLLAR &kp PERCENT                                &kp CARET  &kp LS(LBKT) &kp STAR     &kp LS(RBKT) &kp BSPC   &none
&none &kp UNDER &kp SQT   &kp DQT  &kp MINUS  &kp BSLH                                   &kp PLUS   &kp LPAR     &kp AMPS     &kp RPAR     &kp RETURN &none
&none &kp TAB   &kp GRAVE &kp ESC &kp PIPE  &kp TILDE     &trans &trans     &trans &trans    &none      &kp LBKT     &kp KP_EQUAL &kp RBKT     &kp FSLH   &none
                          &trans    &trans      &kp ESC   &trans &trans     &trans &to SYS &kp ESC &to NUM     &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};


		numpad {
			bindings = <
&none &none     &none    &none    &none     &none                                          &none &kp N7   &kp N8 &kp N9 &kp BSPC  &trans
&none &kp SLASH &kp STAR &kp PLUS &kp MINUS &none                                          &kp COMMA   &kp N4   &kp N5 &kp N6 &kp RETURN &trans
&none &none     &kp LPAR    &none    &kp RPAR     &none  &trans &trans           &trans &trans   &kp DOT   &kp N1   &kp N2 &kp N3 &kp N0  &trans
                          &trans    &trans      &to DEF   &trans &trans     &trans &to SYS &to DEF &to NUM     &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};


		system {
			bindings = <
&none  &none &none &none &none &none                                                        &kp HOME   &kp PG_DN &kp PG_UP  &kp END   &kp BSPC    &none
&none  &none &none &none &none &none                                                        &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT &kp RETURN  &none
&none  &none &none &none &none &none &out OUT_USB  &out OUT_BLE      &bt BT_PRV  &bt BT_NXT &none     &none      &none     &none       &kp KP_EQUAL  &none
                          &trans    &trans      &to DEF   &trans &trans     &trans &to SYS &to DEF &to NUM     &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		blank {
			bindings = <
    &none &none &none &none &none &none                                &none &none &none &none &none &none
    &none &none &none &none &none &none                                &none &none &none &none &none &none
    &none &none &none &none &none &none &none &none        &none &none &none &none &none &none &none &none
                &none &none &none &none &none &none        &none &none &none &none &none &none
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

	};
};
