/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define DEFAULT 0
#define NUM 1
#define SYMB 2
#define SYS 3
#define BLANK 4

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};



/ {
    combos {
        compatible = "zmk,combos";
        combo_caps_right {
            timeout-ms = <50>;
            key-positions = <20 21 22 23>;
            bindings = <&caps_word>;
        };
        combo_caps_left {
            timeout-ms = <50>;
            key-positions = <14 15 16 17>;
            bindings = <&caps_word>;
        };
        combo_left_space {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&caps_word>;
        };
        combo_right_space {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&caps_word>;
        };
        combo_left_return {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp RETURN>;
        };
        combo_right_return {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp RETURN>;
        };
        combo_left_esc {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
        };
        combo_right_backspace {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp BSPC>;
        };
        combo_right_leader {
            timeout-ms = <50>;
            key-positions = <20 21 22>;
            bindings = <&kp BSLH>;
        };
    };


    behaviors {T
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        as: alpha_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_SFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        // TAP_DANCES
        td_lpar_dqt: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LPAR_DQT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp DQT>;
        };
        td_amps_sqt: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_AMPS_SQT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp AMPS>, <&kp SQT>;
        };
        td_rpar_grave: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RPAR_GRAVE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RPAR>, <&kp GRAVE>;
        };
        td_space_under_space: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SPACE_UNDER_SPACE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp UNDER>, <&kp SPACE>;
        };
        td_at_under_7: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_AT_UNDER_7";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N7>, <&kp AT>;
        };
        td_hash_under_8: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_HASH_UNDER_8";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N8>, <&kp HASH>;
        };
        td_dollar_under_9: tap_dance_6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DOLLAR_UNDER_9";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N9>, <&kp DOLLAR>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
    &kp TAB         &kp Q         &kp W       &kp E       &kp R        &kp T                                                        &kp Y    &kp U        &kp I          &kp O        &kp P           &kp BSPC
    &mt LSHIFT ESC  &as LSHIFT A  &am LALT S  &as LGUI D  &as LCTRL F  &kp G                                                        &kp H    &as RCTRL J  &as RGUI K     &as RALT L   &as RSHIFT SEMI &mt RSHIFT RETURN
    &kp LCTRL       &kp Z         &kp X       &kp C       &kp V        &kp B     &kp PSCRN  &kp DEL          &kp DEL   &caps_word   &kp N    &kp M        &kp COMMA      &kp DOT      &kp FSLH        &kp BSLH
                                             &kp LGUI    &kp LALT     &kp SPACE  &mo NUM    &mo SYS          &mo SYS   &mo BLANK   &mo SYMB &mo BLANK &kp INSERT
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		numpad {
			bindings = <
    &trans &none     &none        &none    &none     &none                                      &none  &kp N7 &kp N8 &kp N9 &none  &trans
    &trans &kp SLASH &kp STAR &kp PLUS &kp MINUS &none                                       &kp KP_DOT &kp N4 &kp N5 &kp N6 &kp N0 &trans
    &trans &none     &none        &none    &none     &none &trans &trans           &trans &trans &none  &kp N1 &kp N2 &kp N3 &none  &trans
    &trans &trans    &trans       &trans   &trans    &trans                                      &trans &trans &trans &trans &trans &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		symbols {
			bindings = <
    &trans &kp EXCL  &td_at_under_7 &td_hash_under_8      &td_dollar_under_9 &kp PERCENT                                          &kp CARET &kp LS(LBKT)  &kp STAR     &kp LS(RBKT)   &kp PIPE    &kp GRAVE
    &trans &kp UNDER &kp N4         &kp N5                &kp N6             &kp N0                                               &kp PLUS  &td_lpar_dqt  &td_amps_sqt &td_rpar_grave &kp MINUS   &kp DQT
    &trans &trans    &kp N1         &kp N2                &kp N3             &trans       &trans &trans        &trans    &trans   &none     &kp LBKT      &kp KP_EQUAL &kp RBKT       &kp TILDE   &kp SQT
    &trans &trans    &trans         &trans   &trans       &trans                                               &trans    &trans   &trans    &trans        &trans       &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		system {
			bindings = <
    &none &none     &none     &kp UP     &none     &none                                                   &bt BT_PRV  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_NXT &bt BT_CLR
    &none &none     &kp LEFT  &kp DOWN   &kp RIGHT &none                                               &kp HOME  &kp PG_DN     &kp PG_UP    &kp END      &none      &none
    &none &kp LG(0) &kp LG(1) &kp LG(2) &kp LG(3) &kp LG(4) &none &none        &out OUT_USB &out OUT_BLE &kp LG(5) &kp LG(6)     &kp LG(7)    &kp LG(8)    &kp LG(9)  &none
    &trans &trans    &trans   &trans    &trans    &trans                                                  &trans    &trans        &trans       &trans    &trans       &trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		blank {
			bindings = <
    &none &none &none &none &none &none                                &none &none &none &none &none &none
    &none &none &none &none &none &none                                &none &none &none &none &none &none
    &none &none &none &none &none &none &none &none        &none &none &none &none &none &none &none &none
                &none &none &none &none &none &none        &none &none &none &none &none &none
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};


	};
};
